{"version":3,"sources":["components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/InputField/InputField.module.css","components/App.module.css","components/Contact/Contact.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/InputField/InputField.jsx","components/InputField/InputAttr.jsx","components/ContactForm/ContactForm.jsx","components/App.js","index.js"],"names":["module","exports","Contact","name","number","onDelete","className","styles","item","type","onClick","ContactList","contacts","list","map","id","console","log","length","contactsList","Filter","value","onChange","InputField","props","label","input","inputAttr","pattern","title","required","ContactForm","state","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","onAdd","reset","this","form","onSubmit","Component","App","filter","addContact","normalizedItemName","toLowerCase","contact","includes","alert","uuid","prevState","setFilter","getContacts","normalizedFilter","deleteContact","contactId","displayedContacts","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f29ee9ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__HzECd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__1qPm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__1Q5ym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Kztu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputField_input__2aqbI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__4DO1j\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Contact.module.css\";\n\nconst Contact = ({ name, number, onDelete }) => {\n  return (\n    <li className={styles.item}>\n      <p>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={onDelete}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Contact from \"../Contact\";\nimport styles from \"./ContactsList.module.css\";\n\nconst ContactList = ({ contacts, onDelete }) => {\n  const list = contacts.map(({ id, name, number }) => (\n    <Contact\n      key={id}\n      name={name}\n      number={number}\n      onDelete={() => onDelete(id)}\n    />\n  ));\n  console.log(list);\n  return contacts.length > 0 && <ul className={styles.contactsList}>{list}</ul>;\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <input\n      className={styles.Filter}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport styles from \"./InputField.module.css\";\n\nconst InputField = (props) => (\n  <label>\n    {props.label}\n    <input {...props} className={styles.input} />\n  </label>\n);\n\nexport default InputField;\n","const inputAttr = {\n  name: {\n    type: \"text\",\n    name: \"name\",\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n    required: true,\n    label: \"Name\",\n  },\n  number: {\n    type: \"text\",\n    name: \"number\",\n    pattern: \"+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}\",\n    title:\n      \"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\n    required: true,\n    label: \"Number\",\n  },\n};\n\nexport default inputAttr;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\nimport InputField from \"../InputField/InputField\";\nimport inputAttr from \"../InputField/InputAttr\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onAdd({ ...this.state });\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name } = this.state;\n    const { number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <InputField\n          {...inputAttr.name}\n          value={name}\n          onChange={this.handleChange}\n        />\n        <InputField\n          {...inputAttr.number}\n          value={number}\n          onChange={this.handleChange}\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n\nexport default ContactForm;\n","import React, { Component } from \"react\";\nimport * as uuid from \"uuid\";\nimport ContactList from \"./ContactsList\";\nimport Filter from \"./Filter\";\nimport ContactForm from \"./ContactForm\";\nimport styles from \"./App.module.css\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (item) => {\n    const normalizedItemName = item.name.toLowerCase();\n    const searchExists = this.state.contacts\n      .map((contact) => contact.name.toLowerCase())\n      .includes(normalizedItemName);\n\n    if (searchExists) {\n      alert(`${normalizedItemName} is already in contacts`);\n    } else {\n      const contact = {\n        ...item,\n        id: uuid.v4(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  setFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const displayedContacts = this.getContacts();\n\n    return (\n      <div className={styles.app}>\n        <h1>Phonebook</h1>\n        <ContactForm onAdd={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.setFilter} />\n        <ContactList\n          contacts={displayedContacts}\n          onDelete={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}